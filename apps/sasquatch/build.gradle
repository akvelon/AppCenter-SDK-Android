//
// :apps:sasquatch
//

evaluationDependsOn(':apps')

android {

    flavorDimensions "dependency", "pushLibrary"

    productFlavors {
        projectDependency {
            dimension "dependency"
            applicationIdSuffix ".project"
        }
        jcenterDependency {
            dimension "dependency"
            applicationIdSuffix ".jcenter"
        }
        vanilla {
            dimension "pushLibrary"
        }
        firebase {
            dimension "pushLibrary"
        }
    }

    /* TODO remove that filter once we update the jcenter demo to include the no firebase push sdk. */
    variantFilter { variant ->
        def names = variant.flavors*.name
        if (names.contains("jcenterDependency") && names.contains("vanilla")) {
            setIgnore(true)
        }
    }

    buildTypes {
        releaseProguard {
            minifyEnabled true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            matchingFallbacks = ['release']
        }
    }
}

repositories {
    maven {
        url "https://${rootProject.ext.bintrayUserOrg}.bintray.com/${rootProject.ext.bintrayRepo}"
        credentials {
            username rootProject.ext.bintrayUser
            password rootProject.ext.bintrayKey
        }
    }
}

dependencies {
    def version = "1.0.0-0"
    compile "com.android.support:support-v4:${rootProject.ext.supportLibVersion}"
    compile "com.android.support:appcompat-v7:${rootProject.ext.supportLibVersion}"
    projectDependencyCompile project(':sdk:appcenter-analytics')
    projectDependencyCompile project(':sdk:appcenter-crashes')
    projectDependencyCompile project(':sdk:appcenter-distribute')
    projectDependencyCompile project(':sdk:appcenter-push')
    projectDependencyCompile project(':sdk:appcenter-rum')
    jcenterDependencyCompile "com.microsoft.appcenter:appcenter-analytics:${version}"
    jcenterDependencyCompile "com.microsoft.appcenter:appcenter-crashes:${version}"
    jcenterDependencyCompile "com.microsoft.appcenter:appcenter-distribute:${version}"
    jcenterDependencyCompile "com.microsoft.appcenter:appcenter-push:${version}"

    firebaseCompile "com.google.firebase:firebase-core:${rootProject.ext.firebaseLibVersion}"
    firebaseCompile "com.google.firebase:firebase-messaging:${rootProject.ext.firebaseLibVersion}"

    /* Force usage this version of support annotations to avoid conflict. */
    androidTestCompile "com.android.support:support-annotations:${rootProject.ext.supportLibVersion}"
    androidTestCompile 'com.android.support.test.espresso:espresso-core:3.0.1'
    compile 'com.android.support.test.espresso:espresso-idling-resource:3.0.1'
}

/*
 * This will also bypass google-services.json if executing assembleDebug wildcard task.
 * This is needed to build from App Center build as we don't commit google-services.json and
 * App Center build cannot detect our gradle tasks so we make it execute assembleDebug with a
 * work around. We are interested in only a vanilla build variant (no Firebase) for such builds.
 */
if (getGradle().getStartParameter().getTaskRequests().toString().contains("Firebase")) {
    apply plugin: 'com.google.gms.google-services'
}
