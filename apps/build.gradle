//
// :apps
//

subprojects {
    apply plugin: 'com.android.application'

    android {

        buildTypes {
            release {
                minifyEnabled false
                proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            }
        }
    }

    /*
     * Create a project dependency for assembleDebug and assembleRelease tasks with sub projects.
     * The project doesn't know about assembleDebug and assembleRelease tasks, this is a workaround
     * until Build beacon supports custom gradle tasks.
     */
    tasks.all {
        if (it.name == 'assembleDebug') {
            parent.assembleDebug.dependsOn it
        } else if (it.name == 'assembleRelease') {
            parent.assembleRelease.dependsOn it
        }
    }
}

// Task to copy a specific APK from sub projects to current project, for App Center build to find it.
def copyApkToProjectBuildTask(buildType) {
    subprojects.each { project ->
        def apkPath = "${project.buildDir}/outputs/apk/projectDependencyVanilla/${buildType}/${project.name}-projectDependency-vanilla-${buildType}"
        if ("release".equals(buildType)) {
            apkPath += "-unsigned"
        }
        apkPath += ".apk"
        copy {
            from apkPath
            into "${buildDir}/outputs/apk/"
        }
    }
}

task assembleDebug() {
    doLast {
        copyApkToProjectBuildTask('debug')
    }
}

task assembleRelease() {
    doLast {
        copyApkToProjectBuildTask('release')
    }
}

// Empty task with task dependencies.
task assemble(dependsOn: [assembleDebug, assembleRelease]) {}

task clean() {
    delete project.buildDir
}
